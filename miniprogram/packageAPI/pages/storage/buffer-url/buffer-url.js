import { i18n,lang } from '../../../../i18n/lang'
Page({
  onShareAppMessage() {
    return {
      title: 'buffer URL',
      path: 'packageAPI/pages/storage/buffer-url/buffer-url'
    }
  },

  data: {
    theme: 'light',
    url: '',
    revoked: false,
    base64: ''
  },

  onLoad() {
    this.setData({
      t: i18n,
      lang
    })

    if (wx.onThemeChange) {
      wx.onThemeChange(({ theme }) => {
        this.setData({ theme })
      })
    }
  },

  createBufferURL() {
    const buffer = wx.base64ToArrayBuffer(this.data.base64)
    const url = wx.createBufferURL(buffer)
    this.setData({
      url,
      revoked: false
    })
    wx.showToast({
      title: i18n['buffer0'],
      icon: 'success'
    })
    console.log('===url', url);
  },

  revokeBufferURL() {
    if (this.data.url) {
      wx.revokeBufferURL(this.data.url)
      this.setData({
        revoked: true
      });
      wx.showToast({
        title: i18n['buffer1'],
        icon: 'success'
      })
    } else {
      wx.showToast({
        title: i18n['buffer2'],
        icon: 'none'
      })
    }
  }
})
